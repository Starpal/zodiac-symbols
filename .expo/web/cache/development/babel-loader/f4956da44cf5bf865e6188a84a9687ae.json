{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport 'react-native-gesture-handler';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"../Search/styles\";\nimport Loading from \"../../components/Loading\";\nimport DegreeDetails from \"../../components/DegreeDetails\";\nimport { getDegreeSearch } from \"../../utils/API\";\nimport blackHoleRevert from \"../../static/images/blackHolervt.jpeg\";\nexport default function ResultsScreen(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n      sign = _route$params.sign,\n      degree = _route$params.degree;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchDegree = _useState4[0],\n      setSearchDegree = _useState4[1];\n\n  useEffect(function () {\n    var searchDegreeArray = [];\n    getDegreeSearch(sign, degree).then(function (search) {\n      searchDegreeArray.push(search);\n      setSearchDegree(searchDegreeArray);\n      setIsLoaded(true);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, console.log(searchDegree), isLoaded ? searchDegree.map(function (data) {\n    return React.createElement(DegreeDetails, {\n      id: data._id,\n      sign: data.sign,\n      degree: data.degree,\n      title: data.title,\n      keynote: data.keynote,\n      description: data.description\n    });\n  }) : React.createElement(ImageBackground, {\n    source: blackHoleRevert,\n    style: styles.loadingPageImage\n  }, React.createElement(Loading, null)));\n}","map":{"version":3,"sources":["/Users/paola/Desktop/zodiac-symbols/views/Results/index.js"],"names":["React","useEffect","useState","styles","Loading","DegreeDetails","getDegreeSearch","blackHoleRevert","ResultsScreen","route","params","sign","degree","isLoaded","setIsLoaded","searchDegree","setSearchDegree","searchDegreeArray","then","search","push","console","log","map","data","_id","title","keynote","description","loadingPageImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,8BAAP;;AAEA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,SAASC,eAAT;AACA,OAAOC,eAAP;AAEA,eAAe,SAASC,aAAT,OAAkC;AAAA,MAATC,KAAS,QAATA,KAAS;AAEhD,sBAAyBA,KAAK,CAACC,MAA/B;AAAA,MAAQC,IAAR,iBAAQA,IAAR;AAAA,MAAcC,MAAd,iBAAcA,MAAd;;AACA,kBAAgCV,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwCZ,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOa,YAAP;AAAA,MAAqBC,eAArB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMgB,iBAAiB,GAAG,EAA1B;AACAX,IAAAA,eAAe,CAACK,IAAD,EAAOC,MAAP,CAAf,CACEM,IADF,CACO,UAACC,MAAD,EAAY;AACjBF,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBD,MAAvB;AACAH,MAAAA,eAAe,CAACC,iBAAD,CAAf;AACAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALD;AAMA,GARQ,EAQN,EARM,CAAT;AAUA,SACC,0CACCO,OAAO,CAACC,GAAR,CAAYP,YAAZ,CADD,EAEEF,QAAQ,GAAGE,YAAY,CAACQ,GAAb,CAAiB,UAACC,IAAD;AAAA,WAC5B,oBAAC,aAAD;AACC,MAAA,EAAE,EAAEA,IAAI,CAACC,GADV;AAEC,MAAA,IAAI,EAAED,IAAI,CAACb,IAFZ;AAGC,MAAA,MAAM,EAAEa,IAAI,CAACZ,MAHd;AAIC,MAAA,KAAK,EAAEY,IAAI,CAACE,KAJb;AAKC,MAAA,OAAO,EAAEF,IAAI,CAACG,OALf;AAMC,MAAA,WAAW,EAAEH,IAAI,CAACI;AANnB,MAD4B;AAAA,GAAjB,CAAH,GASP,oBAAC,eAAD;AACC,IAAA,MAAM,EAAErB,eADT;AAEC,IAAA,KAAK,EAAEJ,MAAM,CAAC0B;AAFf,KAGC,oBAAC,OAAD,OAHD,CAXH,CADD;AAoBA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'react-native-gesture-handler';\nimport { ImageBackground } from 'react-native';\nimport styles from '../Search/styles';\nimport Loading from '../../components/Loading';\nimport DegreeDetails from '../../components/DegreeDetails';\nimport { getDegreeSearch } from '../../utils/API';\nimport blackHoleRevert from '../../static/images/blackHolervt.jpeg'\n\nexport default function ResultsScreen({ route }) {\n\t/* Get param from DBSearch navigation */\n\tconst { sign, degree } = route.params;\n\tconst [isLoaded, setIsLoaded] = useState(false)\n\tconst [searchDegree, setSearchDegree] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst searchDegreeArray = []\n\t\tgetDegreeSearch(sign, degree)\n\t\t\t.then((search) => {\n\t\t\t\tsearchDegreeArray.push(search)\n\t\t\t\tsetSearchDegree(searchDegreeArray)\n\t\t\t\tsetIsLoaded(true)\n\t\t})\n\t}, [])\n\t\n\treturn (\n\t\t<>\n\t\t{console.log(searchDegree)}\n\t\t\t{isLoaded ? searchDegree.map((data) => \n\t\t\t\t<DegreeDetails\n\t\t\t\t\tid={data._id}\n\t\t\t\t\tsign={data.sign}\n\t\t\t\t\tdegree={data.degree}\n\t\t\t\t\ttitle={data.title}\n\t\t\t\t\tkeynote={data.keynote}\n\t\t\t\t\tdescription={data.description} />\n\t\t\t\t) : (\n\t\t\t\t\t<ImageBackground \n\t\t\t\t\t\tsource={blackHoleRevert}\n\t\t\t\t\t\tstyle={styles.loadingPageImage}>\n\t\t\t\t\t\t<Loading />\n\t\t\t\t\t</ImageBackground>\n\t\t\t\t)}\n\t\t</>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}