{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport { isExpo } from \"./platform\";\nvar SAFEBOUNCE_HEIGHT_IOS = 300;\nvar SAFEBOUNCE_HEIGHT_ANDROID = 100;\nvar SAFEBOUNCE_HEIGHT_WEB = 0;\nvar safeBounceHeight = Platform.select({\n  ios: SAFEBOUNCE_HEIGHT_IOS,\n  android: SAFEBOUNCE_HEIGHT_ANDROID,\n  web: SAFEBOUNCE_HEIGHT_WEB\n});\n\nvar setSafeBounceHeight = function setSafeBounceHeight(height) {\n  safeBounceHeight = height;\n};\n\nvar getSafeBounceHeight = function getSafeBounceHeight() {\n  return safeBounceHeight;\n};\n\nvar getDefaultHeaderHeight = function getDefaultHeaderHeight(isLandscape) {\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  }\n\n  return 64;\n};\n\nvar disabledExpoTranslucentStatusBar = false;\n\nvar disableExpoTranslucentStatusBar = function disableExpoTranslucentStatusBar() {\n  disabledExpoTranslucentStatusBar = true;\n};\n\nvar getStatusBarHeight = function getStatusBarHeight(isLandscape) {\n  if (Platform.OS === 'ios') {\n    if (isLandscape) return 0;\n    return isIphoneX() ? 44 : 20;\n  } else if (Platform.OS === 'android') {\n    return (global.Expo || isExpo()) && !disabledExpoTranslucentStatusBar ? StatusBar.currentHeight : 0;\n  } else return 0;\n};\n\nvar getNavigationHeight = function getNavigationHeight(isLandscape, headerHeight) {\n  return headerHeight + getStatusBarHeight(isLandscape);\n};\n\nvar getElevationStyle = function getElevationStyle(elevation) {\n  if (Platform.OS === 'ios') {\n    if (elevation === 0) return null;else return {\n      shadowOpacity: 0.0015 * elevation + 0.18,\n      shadowRadius: 0.54 * elevation,\n      shadowOffset: {\n        height: 0.6 * elevation,\n        width: 0.6 * elevation\n      }\n    };\n  } else {\n    return {\n      elevation: elevation\n    };\n  }\n};\n\nexport { setSafeBounceHeight, getSafeBounceHeight, getDefaultHeaderHeight, getNavigationHeight, getStatusBarHeight, disableExpoTranslucentStatusBar, getElevationStyle };","map":{"version":3,"sources":["/Users/paola/Desktop/zodiac-symbols/node_modules/react-navigation-collapsible/lib/src/utils.js"],"names":["isIphoneX","isExpo","SAFEBOUNCE_HEIGHT_IOS","SAFEBOUNCE_HEIGHT_ANDROID","SAFEBOUNCE_HEIGHT_WEB","safeBounceHeight","Platform","select","ios","android","web","setSafeBounceHeight","height","getSafeBounceHeight","getDefaultHeaderHeight","isLandscape","OS","isPad","disabledExpoTranslucentStatusBar","disableExpoTranslucentStatusBar","getStatusBarHeight","global","Expo","StatusBar","currentHeight","getNavigationHeight","headerHeight","getElevationStyle","elevation","shadowOpacity","shadowRadius","shadowOffset","width"],"mappings":";;AACA,SAASA,SAAT,QAA0B,8BAA1B;AACA,SAASC,MAAT;AACA,IAAIC,qBAAqB,GAAG,GAA5B;AACA,IAAIC,yBAAyB,GAAG,GAAhC;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,gBAAgB,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AACnCC,EAAAA,GAAG,EAAEN,qBAD8B;AAEnCO,EAAAA,OAAO,EAAEN,yBAF0B;AAGnCO,EAAAA,GAAG,EAAEN;AAH8B,CAAhB,CAAvB;;AAKA,IAAIO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,MAAV,EAAkB;AACxCP,EAAAA,gBAAgB,GAAGO,MAAnB;AACH,CAFD;;AAGA,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAY;AAAE,SAAOR,gBAAP;AAA0B,CAAlE;;AACA,IAAIS,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,WAAV,EAAuB;AAChD,MAAIT,QAAQ,CAACU,EAAT,KAAgB,KAApB,EAA2B;AACvB,QAAID,WAAW,IAAI,CAACT,QAAQ,CAACW,KAA7B,EAAoC;AAChC,aAAO,EAAP;AACH,KAFD,MAGK;AACD,aAAO,EAAP;AACH;AACJ,GAPD,MAQK,IAAIX,QAAQ,CAACU,EAAT,KAAgB,SAApB,EAA+B;AAChC,WAAO,EAAP;AACH;;AACD,SAAO,EAAP;AACH,CAbD;;AAcA,IAAIE,gCAAgC,GAAG,KAAvC;;AACA,IAAIC,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAY;AAC9CD,EAAAA,gCAAgC,GAAG,IAAnC;AACH,CAFD;;AAGA,IAAIE,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUL,WAAV,EAAuB;AAC5C,MAAIT,QAAQ,CAACU,EAAT,KAAgB,KAApB,EAA2B;AACvB,QAAID,WAAJ,EACI,OAAO,CAAP;AACJ,WAAOf,SAAS,KAAK,EAAL,GAAU,EAA1B;AACH,GAJD,MAKK,IAAIM,QAAQ,CAACU,EAAT,KAAgB,SAApB,EAA+B;AAEhC,WAAO,CAACK,MAAM,CAACC,IAAP,IAAerB,MAAM,EAAtB,KAA6B,CAACiB,gCAA9B,GACDK,SAAS,CAACC,aADT,GAED,CAFN;AAGH,GALI,MAOD,OAAO,CAAP;AACP,CAdD;;AAeA,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUV,WAAV,EAAuBW,YAAvB,EAAqC;AAC3D,SAAOA,YAAY,GAAGN,kBAAkB,CAACL,WAAD,CAAxC;AACH,CAFD;;AAGA,IAAIY,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,SAAV,EAAqB;AACzC,MAAItB,QAAQ,CAACU,EAAT,KAAgB,KAApB,EAA2B;AACvB,QAAIY,SAAS,KAAK,CAAlB,EACI,OAAO,IAAP,CADJ,KAGI,OAAO;AACHC,MAAAA,aAAa,EAAE,SAASD,SAAT,GAAqB,IADjC;AAEHE,MAAAA,YAAY,EAAE,OAAOF,SAFlB;AAGHG,MAAAA,YAAY,EAAE;AACVnB,QAAAA,MAAM,EAAE,MAAMgB,SADJ;AAEVI,QAAAA,KAAK,EAAE,MAAMJ;AAFH;AAHX,KAAP;AAQP,GAZD,MAaK;AACD,WAAO;AACHA,MAAAA,SAAS,EAAEA;AADR,KAAP;AAGH;AACJ,CAnBD;;AAoBA,SAASjB,mBAAT,EAA8BE,mBAA9B,EAAmDC,sBAAnD,EAA2EW,mBAA3E,EAAgGL,kBAAhG,EAAoHD,+BAApH,EAAqJQ,iBAArJ","sourcesContent":["import { Platform, StatusBar } from 'react-native';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport { isExpo } from './platform';\nvar SAFEBOUNCE_HEIGHT_IOS = 300;\nvar SAFEBOUNCE_HEIGHT_ANDROID = 100;\nvar SAFEBOUNCE_HEIGHT_WEB = 0;\nvar safeBounceHeight = Platform.select({\n    ios: SAFEBOUNCE_HEIGHT_IOS,\n    android: SAFEBOUNCE_HEIGHT_ANDROID,\n    web: SAFEBOUNCE_HEIGHT_WEB,\n});\nvar setSafeBounceHeight = function (height) {\n    safeBounceHeight = height;\n};\nvar getSafeBounceHeight = function () { return safeBounceHeight; };\nvar getDefaultHeaderHeight = function (isLandscape) {\n    if (Platform.OS === 'ios') {\n        if (isLandscape && !Platform.isPad) {\n            return 32;\n        }\n        else {\n            return 44;\n        }\n    }\n    else if (Platform.OS === 'android') {\n        return 56;\n    }\n    return 64;\n};\nvar disabledExpoTranslucentStatusBar = false;\nvar disableExpoTranslucentStatusBar = function () {\n    disabledExpoTranslucentStatusBar = true;\n};\nvar getStatusBarHeight = function (isLandscape) {\n    if (Platform.OS === 'ios') {\n        if (isLandscape)\n            return 0;\n        return isIphoneX() ? 44 : 20;\n    }\n    else if (Platform.OS === 'android') {\n        // eslint-disable-next-line no-undef\n        return (global.Expo || isExpo()) && !disabledExpoTranslucentStatusBar\n            ? StatusBar.currentHeight\n            : 0;\n    }\n    else\n        return 0;\n};\nvar getNavigationHeight = function (isLandscape, headerHeight) {\n    return headerHeight + getStatusBarHeight(isLandscape);\n};\nvar getElevationStyle = function (elevation) {\n    if (Platform.OS === 'ios') {\n        if (elevation === 0)\n            return null;\n        else\n            return {\n                shadowOpacity: 0.0015 * elevation + 0.18,\n                shadowRadius: 0.54 * elevation,\n                shadowOffset: {\n                    height: 0.6 * elevation,\n                    width: 0.6 * elevation,\n                },\n            };\n    }\n    else {\n        return {\n            elevation: elevation,\n        };\n    }\n};\nexport { setSafeBounceHeight, getSafeBounceHeight, getDefaultHeaderHeight, getNavigationHeight, getStatusBarHeight, disableExpoTranslucentStatusBar, getElevationStyle, };\n"]},"metadata":{},"sourceType":"module"}