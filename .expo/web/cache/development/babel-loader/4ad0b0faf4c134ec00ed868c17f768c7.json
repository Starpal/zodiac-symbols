{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useLayoutEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles/styles\";\nimport { OPTIONS } from \"../utils/costants\";\nimport { useCollapsibleHeader } from \"react-navigation-collapsible\";\nimport util from \"../utils/util\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Switch } from \"react-native-switch\";\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nexport default function DegreeDetails(_ref) {\n  var id = _ref.id,\n      sign = _ref.sign,\n      degree = _ref.degree,\n      title = _ref.title,\n      keynote = _ref.keynote,\n      description = _ref.description;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      randomSky = _useState2[0],\n      setRandomSky = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toggleSwitch = _useState4[0],\n      setToggleSwitch = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    setRandomSky(util.getRandomSky());\n    console.log(id);\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            marginRight: 18\n          }\n        }, React.createElement(Switch, {\n          activeText: '',\n          inActiveText: '',\n          barHeight: 15,\n          circleSize: 25,\n          circleBorderWidth: 0,\n          switchWidthMultiplier: 1,\n          backgroundActive: \"#19a093\",\n          backgroundInactive: \"#767577\",\n          circleActiveColor: \"#66c0b7\",\n          circleInActiveColor: \"#f4f3f4\",\n          switchRightPx: 3,\n          switchLeftPx: 3,\n          useNativeDriver: true,\n          renderInsideCircle: function renderInsideCircle() {\n            return toggleSwitch === true ? React.createElement(Ionicons, {\n              name: \"planet-outline\",\n              size: 20,\n              color: \"#404040\"\n            }) : React.createElement(MaterialCommunityIcons, {\n              name: \"glasses\",\n              size: 20,\n              color: \"#404040\"\n            });\n          },\n          value: toggleSwitch,\n          onValueChange: function onValueChange(value) {\n            return setToggleSwitch(value);\n          }\n        }));\n      }\n    });\n  }, [toggleSwitch]);\n\n  var _useCollapsibleHeader = useCollapsibleHeader(OPTIONS),\n      onScroll = _useCollapsibleHeader.onScroll,\n      containerPaddingTop = _useCollapsibleHeader.containerPaddingTop,\n      scrollIndicatorInsetTop = _useCollapsibleHeader.scrollIndicatorInsetTop;\n\n  return React.createElement(ImageBackground, {\n    source: toggleSwitch ? null : randomSky,\n    style: styles.homePageImage\n  }, React.createElement(Animated.ScrollView, {\n    key: id,\n    onScroll: onScroll,\n    scrollIndicatorInsets: {\n      top: scrollIndicatorInsetTop,\n      right: 1\n    },\n    contentContainerStyle: {\n      paddingVertical: 20,\n      paddingTop: containerPaddingTop\n    }\n  }, React.createElement(View, {\n    style: [styles.main, toggleSwitch && {\n      backgroundColor: \"#ded9d6\"\n    }]\n  }, React.createElement(Text, {\n    style: styles.sign\n  }, sign), React.createElement(Text, {\n    style: [styles.degree, {\n      fontFamily: Platform.OS == \"android\" && 'Charmonman'\n    }]\n  }, degree + \"Â°\"), React.createElement(Text, {\n    style: styles.title\n  }, title), React.createElement(Text, {\n    style: styles.keynote\n  }, keynote, \"\\n\"), React.createElement(View, {\n    style: [styles.descriptionContainer, !toggleSwitch && {\n      backgroundColor: Platform.OS == \"ios\" ? \"rgba(223, 231, 253, 0.3)\" : \"rgba(223, 231, 253, 0.42)\"\n    }]\n  }, React.createElement(Text, {\n    style: styles.description\n  }, description))), React.createElement(TouchableOpacity, {\n    style: styles.goBackButtonContainer,\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    }\n  }, React.createElement(Text, {\n    style: styles.goBackButtonText\n  }, \"Home\"))));\n}","map":{"version":3,"sources":["/Users/paola/Desktop/zodiac-symbols/components/DegreeDetails.js"],"names":["React","useEffect","useState","useLayoutEffect","useNavigation","styles","OPTIONS","useCollapsibleHeader","util","Switch","MaterialCommunityIcons","Ionicons","DegreeDetails","id","sign","degree","title","keynote","description","randomSky","setRandomSky","toggleSwitch","setToggleSwitch","navigation","getRandomSky","console","log","setOptions","headerRight","marginRight","value","onScroll","containerPaddingTop","scrollIndicatorInsetTop","homePageImage","top","right","paddingVertical","paddingTop","main","backgroundColor","fontFamily","Platform","OS","descriptionContainer","goBackButtonContainer","navigate","goBackButtonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useLayoutEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { View, ImageBackground, Text, TouchableOpacity } from \"react-native\";\nimport styles from \"./styles/styles\";\nimport { OPTIONS } from \"../utils/costants\";\nimport { useCollapsibleHeader } from \"react-navigation-collapsible\";\nimport util from \"../utils/util\";\nimport { Animated } from \"react-native\";\nimport { Switch } from \"react-native-switch\";\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\n\nexport default function DegreeDetails({ id, sign, degree, title, keynote, description }) {\n\t\n\tconst [randomSky, setRandomSky] = useState();\n\tconst [toggleSwitch, setToggleSwitch] = useState(false);\n\t\n\tconst navigation = useNavigation();\n\n\tuseEffect(() => {\n\t\tsetRandomSky(util.getRandomSky())\n\t\tconsole.log(id)\n\t}, [])\n\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({\n\t\t\theaderRight: () => (\n\t\t\t\t<View style={{ marginRight: 18 }}>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tactiveText={''}\n\t\t\t\t\t\tinActiveText={''}\n\t\t\t\t\t\tbarHeight={15}\n\t\t\t\t\t\tcircleSize={25}\n\t\t\t\t\t\tcircleBorderWidth={0}\n\t\t\t\t\t\tswitchWidthMultiplier={1}\n\t\t\t\t\t\tbackgroundActive={\"#19a093\"}\n\t\t\t\t\t\tbackgroundInactive={\"#767577\"}\n\t\t\t\t\t\tcircleActiveColor={\"#66c0b7\"}\n\t\t\t\t\t\tcircleInActiveColor={\"#f4f3f4\"}\n\t\t\t\t\t\tswitchRightPx={3}\n\t\t\t\t\t\tswitchLeftPx={3}\n\t\t\t\t\t\tuseNativeDriver={true}\n\t\t\t\t\t\trenderInsideCircle={() => toggleSwitch === true ? \n\t\t\t\t\t\t\t<Ionicons name=\"planet-outline\" size={20} color=\"#404040\"/>\n\t\t\t\t\t\t\t: <MaterialCommunityIcons name=\"glasses\" size={20} color=\"#404040\"/>}\n\t\t\t\t\t\tvalue={toggleSwitch}\n\t\t\t\t\t\tonValueChange={(value) => setToggleSwitch(value)} />\n\t\t\t\t</View>\n\t\t\t)\n\t\t})\n\t}, [toggleSwitch]);\n\n\tconst {\n\t\tonScroll,\n\t\tcontainerPaddingTop,\n\t\tscrollIndicatorInsetTop,\n\t} = useCollapsibleHeader(OPTIONS);\n\n  \treturn (\n\t\t<ImageBackground source={toggleSwitch ? null : randomSky} style={styles.homePageImage}>\n\t\t\t<Animated.ScrollView\n\t\t\t\tkey={id}\n\t\t\t\tonScroll={onScroll}\n\t\t\t\tscrollIndicatorInsets={{ top: scrollIndicatorInsetTop, right: 1 }}\n\t\t\t\tcontentContainerStyle={{\n\t\t\t\tpaddingVertical: 20,\n\t\t\t\tpaddingTop: containerPaddingTop\n\t\t\t\t}}>\n\t\t\t\t<View style={[styles.main, toggleSwitch && { backgroundColor: \"#ded9d6\" }]}>\n\t\t\t\t\t<Text style={styles.sign}>{sign}</Text>\n\t\t\t\t\t<Text style={[styles.degree, {fontFamily: Platform.OS == \"android\" && 'Charmonman'}]}>{degree + \"Â°\"}</Text>\n\t\t\t\t\t<Text style={styles.title}>{title}</Text>\n\t\t\t\t\t<Text style={styles.keynote }>\n\t\t\t\t\t\t{keynote}\n\t\t\t\t\t\t{\"\\n\"}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<View style={[ styles.descriptionContainer, !toggleSwitch && {\n\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\tPlatform.OS == \"ios\"\n\t\t\t\t\t\t\t\t? \"rgba(223, 231, 253, 0.3)\"\n\t\t\t\t\t\t\t\t: \"rgba(223, 231, 253, 0.42)\",\n\t\t\t\t\t\t}]}>\n\t\t\t\t\t\t<Text style={styles.description}>{description}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<TouchableOpacity style={styles.goBackButtonContainer} onPress={() => navigation.navigate(\"Home\")}>\n\t\t\t\t\t<Text style={styles.goBackButtonText}>Home</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</Animated.ScrollView>\n\t\t</ImageBackground>\n  \t);\n}\n"]},"metadata":{},"sourceType":"module"}