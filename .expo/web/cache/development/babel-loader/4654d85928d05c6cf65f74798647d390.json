{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"backgroundActive\", \"backgroundInactive\", \"circleActiveColor\", \"circleInActiveColor\", \"activeText\", \"inActiveText\", \"circleSize\", \"containerStyle\", \"activeTextStyle\", \"inactiveTextStyle\", \"barHeight\", \"circleBorderInactiveColor\", \"circleBorderActiveColor\", \"circleBorderWidth\", \"innerCircleStyle\", \"outerCircleStyle\", \"renderActiveText\", \"renderInActiveText\", \"renderInsideCircle\", \"switchWidthMultiplier\", \"switchBorderRadius\", \"value\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from \"prop-types\";\nexport var Switch = function (_Component) {\n  _inherits(Switch, _Component);\n\n  var _super = _createSuper(Switch);\n\n  function Switch(props, context) {\n    var _this;\n\n    _classCallCheck(this, Switch);\n\n    _this = _super.call(this, props, context);\n\n    _this.handleSwitch = function () {\n      var value = _this.state.value;\n      var _this$props = _this.props,\n          onValueChange = _this$props.onValueChange,\n          disabled = _this$props.disabled,\n          changeValueImmediately = _this$props.changeValueImmediately,\n          propValue = _this$props.value;\n\n      if (disabled) {\n        return;\n      }\n\n      if (_this.props.value === _this.state.value) {\n        onValueChange(!_this.state.value);\n        return;\n      }\n\n      if (changeValueImmediately) {\n        _this.animateSwitch(!propValue);\n\n        onValueChange(!propValue);\n      } else {\n        _this.animateSwitch(!value, function () {\n          return _this.setState({\n            value: !value\n          }, function () {\n            return onValueChange(_this.state.value);\n          });\n        });\n      }\n    };\n\n    _this.animateSwitch = function (value) {\n      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      Animated.parallel([Animated.spring(_this.state.transformSwitch, {\n        toValue: value ? _this.props.circleSize / _this.props.switchLeftPx : -_this.props.circleSize / _this.props.switchRightPx,\n        useNativeDriver: false\n      }), Animated.timing(_this.state.backgroundColor, {\n        toValue: value ? 75 : -75,\n        duration: 200,\n        useNativeDriver: false\n      }), Animated.timing(_this.state.circleColor, {\n        toValue: value ? 75 : -75,\n        duration: 200,\n        useNativeDriver: false\n      }), Animated.timing(_this.state.circleBorderColor, {\n        toValue: value ? 75 : -75,\n        duration: 200,\n        useNativeDriver: false\n      })]).start(cb);\n    };\n\n    _this.state = {\n      value: props.value,\n      transformSwitch: new Animated.Value(props.value ? props.circleSize / props.switchLeftPx : -props.circleSize / props.switchRightPx),\n      backgroundColor: new Animated.Value(props.value ? 75 : -75),\n      circleColor: new Animated.Value(props.value ? 75 : -75),\n      circleBorderColor: new Animated.Value(props.value ? 75 : -75)\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          value = _this$props2.value,\n          disabled = _this$props2.disabled;\n\n      if (prevProps.value === value) {\n        return;\n      }\n\n      if (prevProps.disabled && disabled === prevProps.disabled) {\n        return;\n      }\n\n      this.animateSwitch(value, function () {\n        return _this2.setState({\n          value: value\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          transformSwitch = _this$state.transformSwitch,\n          backgroundColor = _this$state.backgroundColor,\n          circleColor = _this$state.circleColor,\n          circleBorderColor = _this$state.circleBorderColor;\n\n      var _this$props3 = this.props,\n          backgroundActive = _this$props3.backgroundActive,\n          backgroundInactive = _this$props3.backgroundInactive,\n          circleActiveColor = _this$props3.circleActiveColor,\n          circleInActiveColor = _this$props3.circleInActiveColor,\n          activeText = _this$props3.activeText,\n          inActiveText = _this$props3.inActiveText,\n          circleSize = _this$props3.circleSize,\n          containerStyle = _this$props3.containerStyle,\n          activeTextStyle = _this$props3.activeTextStyle,\n          inactiveTextStyle = _this$props3.inactiveTextStyle,\n          barHeight = _this$props3.barHeight,\n          circleBorderInactiveColor = _this$props3.circleBorderInactiveColor,\n          circleBorderActiveColor = _this$props3.circleBorderActiveColor,\n          circleBorderWidth = _this$props3.circleBorderWidth,\n          innerCircleStyle = _this$props3.innerCircleStyle,\n          outerCircleStyle = _this$props3.outerCircleStyle,\n          renderActiveText = _this$props3.renderActiveText,\n          renderInActiveText = _this$props3.renderInActiveText,\n          renderInsideCircle = _this$props3.renderInsideCircle,\n          switchWidthMultiplier = _this$props3.switchWidthMultiplier,\n          switchBorderRadius = _this$props3.switchBorderRadius,\n          value = _this$props3.value,\n          restProps = _objectWithoutProperties(_this$props3, _excluded);\n\n      var interpolatedColorAnimation = backgroundColor.interpolate({\n        inputRange: [-75, 75],\n        outputRange: [backgroundInactive, backgroundActive]\n      });\n      var interpolatedCircleColor = circleColor.interpolate({\n        inputRange: [-75, 75],\n        outputRange: [circleInActiveColor, circleActiveColor]\n      });\n      var interpolatedCircleBorderColor = circleBorderColor.interpolate({\n        inputRange: [-75, 75],\n        outputRange: [circleBorderInactiveColor, circleBorderActiveColor]\n      });\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        onPress: this.handleSwitch\n      }, restProps), React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, {\n          backgroundColor: interpolatedColorAnimation,\n          width: circleSize * switchWidthMultiplier,\n          height: barHeight || circleSize,\n          borderRadius: switchBorderRadius || circleSize\n        }]\n      }, React.createElement(Animated.View, {\n        style: [styles.animatedContainer, {\n          left: transformSwitch,\n          width: circleSize * switchWidthMultiplier\n        }, outerCircleStyle]\n      }, value && renderActiveText && React.createElement(Text, {\n        style: [styles.text, styles.paddingRight, activeTextStyle]\n      }, activeText), React.createElement(Animated.View, {\n        style: [styles.circle, {\n          borderWidth: circleBorderWidth,\n          borderColor: interpolatedCircleBorderColor,\n          backgroundColor: interpolatedCircleColor,\n          width: circleSize,\n          height: circleSize,\n          borderRadius: circleSize / 2\n        }, innerCircleStyle]\n      }, renderInsideCircle()), !value && renderInActiveText && React.createElement(Text, {\n        style: [styles.text, styles.paddingLeft, inactiveTextStyle]\n      }, inActiveText))));\n    }\n  }]);\n\n  return Switch;\n}(Component);\nSwitch.propTypes = {\n  onValueChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  activeText: PropTypes.string,\n  inActiveText: PropTypes.string,\n  backgroundActive: PropTypes.string,\n  backgroundInactive: PropTypes.string,\n  value: PropTypes.bool,\n  circleActiveColor: PropTypes.string,\n  circleInActiveColor: PropTypes.string,\n  circleSize: PropTypes.number,\n  circleBorderActiveColor: PropTypes.string,\n  circleBorderInactiveColor: PropTypes.string,\n  activeTextStyle: PropTypes.object,\n  inactiveTextStyle: PropTypes.object,\n  containerStyle: PropTypes.object,\n  barHeight: PropTypes.number,\n  circleBorderWidth: PropTypes.number,\n  innerCircleStyle: PropTypes.object,\n  renderInsideCircle: PropTypes.func,\n  changeValueImmediately: PropTypes.bool,\n  innerCircleStyle: PropTypes.object,\n  outerCircleStyle: PropTypes.object,\n  renderActiveText: PropTypes.bool,\n  renderInActiveText: PropTypes.bool,\n  switchLeftPx: PropTypes.number,\n  switchRightPx: PropTypes.number,\n  switchWidthMultiplier: PropTypes.number,\n  switchBorderRadius: PropTypes.number\n};\nSwitch.defaultProps = {\n  value: false,\n  onValueChange: function onValueChange() {\n    return null;\n  },\n  renderInsideCircle: function renderInsideCircle() {\n    return null;\n  },\n  innerCircleStyle: {},\n  disabled: false,\n  activeText: \"On\",\n  inActiveText: \"Off\",\n  backgroundActive: \"green\",\n  backgroundInactive: \"gray\",\n  circleActiveColor: \"white\",\n  circleInActiveColor: \"white\",\n  circleBorderActiveColor: \"rgb(100, 100, 100)\",\n  circleBorderInactiveColor: \"rgb(80, 80, 80)\",\n  circleSize: 30,\n  barHeight: null,\n  circleBorderWidth: 1,\n  changeValueImmediately: true,\n  innerCircleStyle: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  outerCircleStyle: {},\n  renderActiveText: true,\n  renderInActiveText: true,\n  switchLeftPx: 2,\n  switchRightPx: 2,\n  switchWidthMultiplier: 2,\n  switchBorderRadius: null,\n  testID: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 71,\n    height: 30,\n    borderRadius: 30,\n    backgroundColor: \"black\"\n  },\n  animatedContainer: {\n    flex: 1,\n    width: 78,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: \"white\"\n  },\n  text: {\n    color: \"white\",\n    backgroundColor: \"transparent\"\n  },\n  paddingRight: {\n    paddingRight: 5\n  },\n  paddingLeft: {\n    paddingLeft: 5\n  }\n});","map":{"version":3,"sources":["/Users/paola/Desktop/zodiac-symbols/node_modules/react-native-switch/lib/Switch.js"],"names":["React","Component","ViewPropTypes","PropTypes","Switch","props","context","handleSwitch","value","state","onValueChange","disabled","changeValueImmediately","propValue","animateSwitch","setState","cb","Animated","parallel","spring","transformSwitch","toValue","circleSize","switchLeftPx","switchRightPx","useNativeDriver","timing","backgroundColor","duration","circleColor","circleBorderColor","start","Value","prevProps","backgroundActive","backgroundInactive","circleActiveColor","circleInActiveColor","activeText","inActiveText","containerStyle","activeTextStyle","inactiveTextStyle","barHeight","circleBorderInactiveColor","circleBorderActiveColor","circleBorderWidth","innerCircleStyle","outerCircleStyle","renderActiveText","renderInActiveText","renderInsideCircle","switchWidthMultiplier","switchBorderRadius","restProps","interpolatedColorAnimation","interpolate","inputRange","outputRange","interpolatedCircleColor","interpolatedCircleBorderColor","styles","container","width","height","borderRadius","animatedContainer","left","text","paddingRight","circle","borderWidth","borderColor","paddingLeft","propTypes","func","bool","string","number","object","defaultProps","alignItems","justifyContent","testID","StyleSheet","create","flex","flexDirection","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  PanResponder,\n  TouchableWithoutFeedback,\n  ViewPropTypes\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nexport class Switch extends Component {\n  static propTypes = {\n    onValueChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    activeText: PropTypes.string,\n    inActiveText: PropTypes.string,\n    backgroundActive: PropTypes.string,\n    backgroundInactive: PropTypes.string,\n    value: PropTypes.bool,\n    circleActiveColor: PropTypes.string,\n    circleInActiveColor: PropTypes.string,\n    circleSize: PropTypes.number,\n    circleBorderActiveColor: PropTypes.string,\n    circleBorderInactiveColor: PropTypes.string,\n    activeTextStyle: PropTypes.object,\n    inactiveTextStyle: PropTypes.object,\n    containerStyle: PropTypes.object,\n    barHeight: PropTypes.number,\n    circleBorderWidth: PropTypes.number,\n    innerCircleStyle: PropTypes.object,\n    renderInsideCircle: PropTypes.func,\n    changeValueImmediately: PropTypes.bool,\n    innerCircleStyle: PropTypes.object,\n    outerCircleStyle: PropTypes.object,\n    renderActiveText: PropTypes.bool,\n    renderInActiveText: PropTypes.bool,\n    switchLeftPx: PropTypes.number,\n    switchRightPx: PropTypes.number,\n    switchWidthMultiplier: PropTypes.number,\n    switchBorderRadius: PropTypes.number\n  };\n\n  static defaultProps = {\n    value: false,\n    onValueChange: () => null,\n    renderInsideCircle: () => null,\n    innerCircleStyle: {},\n    disabled: false,\n    activeText: \"On\",\n    inActiveText: \"Off\",\n    backgroundActive: \"green\",\n    backgroundInactive: \"gray\",\n    circleActiveColor: \"white\",\n    circleInActiveColor: \"white\",\n    circleBorderActiveColor: \"rgb(100, 100, 100)\",\n    circleBorderInactiveColor: \"rgb(80, 80, 80)\",\n    circleSize: 30,\n    barHeight: null,\n    circleBorderWidth: 1,\n    changeValueImmediately: true,\n    innerCircleStyle: { alignItems: \"center\", justifyContent: \"center\" },\n    outerCircleStyle: {},\n    renderActiveText: true,\n    renderInActiveText: true,\n    switchLeftPx: 2,\n    switchRightPx: 2,\n    switchWidthMultiplier: 2,\n    switchBorderRadius: null,\n    testID: null\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      value: props.value,\n      transformSwitch: new Animated.Value(\n        props.value\n          ? props.circleSize / props.switchLeftPx\n          : -props.circleSize / props.switchRightPx\n      ),\n      backgroundColor: new Animated.Value(props.value ? 75 : -75),\n      circleColor: new Animated.Value(props.value ? 75 : -75),\n      circleBorderColor: new Animated.Value(props.value ? 75 : -75)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value, disabled } = this.props;\n    if (prevProps.value === value) {\n      return;\n    }\n    if (prevProps.disabled && disabled === prevProps.disabled) {\n      return;\n    }\n\n    this.animateSwitch(value, () => this.setState({ value }));\n  }\n\n  handleSwitch = () => {\n    const { value } = this.state;\n    const {\n      onValueChange,\n      disabled,\n      changeValueImmediately,\n      value: propValue\n    } = this.props;\n    if (disabled) {\n      return;\n    }\n    if (this.props.value === this.state.value) {\n      onValueChange(!this.state.value);\n      return;\n    }\n\n    if (changeValueImmediately) {\n      this.animateSwitch(!propValue);\n      onValueChange(!propValue);\n    } else {\n      this.animateSwitch(!value, () =>\n        this.setState({ value: !value }, () => onValueChange(this.state.value))\n      );\n    }\n  };\n\n  animateSwitch = (value, cb = () => {}) => {\n    Animated.parallel([\n      Animated.spring(this.state.transformSwitch, {\n        toValue: value\n          ? this.props.circleSize / this.props.switchLeftPx\n          : -this.props.circleSize / this.props.switchRightPx,\n        useNativeDriver: false\n      }),\n      Animated.timing(this.state.backgroundColor, {\n        toValue: value ? 75 : -75,\n        duration: 200,\n        useNativeDriver: false\n      }),\n      Animated.timing(this.state.circleColor, {\n        toValue: value ? 75 : -75,\n        duration: 200,\n        useNativeDriver: false\n      }),\n      Animated.timing(this.state.circleBorderColor, {\n        toValue: value ? 75 : -75,\n        duration: 200,\n        useNativeDriver: false\n      })\n    ]).start(cb);\n  };\n\n  render() {\n    const {\n      transformSwitch,\n      backgroundColor,\n      circleColor,\n      circleBorderColor\n    } = this.state;\n\n    const {\n      backgroundActive,\n      backgroundInactive,\n      circleActiveColor,\n      circleInActiveColor,\n      activeText,\n      inActiveText,\n      circleSize,\n      containerStyle,\n      activeTextStyle,\n      inactiveTextStyle,\n      barHeight,\n      circleBorderInactiveColor,\n      circleBorderActiveColor,\n      circleBorderWidth,\n      innerCircleStyle,\n      outerCircleStyle,\n      renderActiveText,\n      renderInActiveText,\n      renderInsideCircle,\n      switchWidthMultiplier,\n      switchBorderRadius,\n      value,\n      ...restProps\n    } = this.props;\n\n    const interpolatedColorAnimation = backgroundColor.interpolate({\n      inputRange: [-75, 75],\n      outputRange: [backgroundInactive, backgroundActive]\n    });\n\n    const interpolatedCircleColor = circleColor.interpolate({\n      inputRange: [-75, 75],\n      outputRange: [circleInActiveColor, circleActiveColor]\n    });\n\n    const interpolatedCircleBorderColor = circleBorderColor.interpolate({\n      inputRange: [-75, 75],\n      outputRange: [circleBorderInactiveColor, circleBorderActiveColor]\n    });\n\n    return (\n      <TouchableWithoutFeedback onPress={this.handleSwitch} {...restProps}>\n        <Animated.View\n          style={[\n            styles.container,\n            containerStyle,\n            {\n              backgroundColor: interpolatedColorAnimation,\n              width: circleSize * switchWidthMultiplier,\n              height: barHeight || circleSize,\n              borderRadius: switchBorderRadius || circleSize\n            }\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.animatedContainer,\n              {\n                left: transformSwitch,\n                width: circleSize * switchWidthMultiplier\n              },\n              outerCircleStyle\n            ]}\n          >\n            {value && renderActiveText && (\n              <Text style={[styles.text, styles.paddingRight, activeTextStyle]}>\n                {activeText}\n              </Text>\n            )}\n\n            <Animated.View\n              style={[\n                styles.circle,\n                {\n                  borderWidth: circleBorderWidth,\n                  borderColor: interpolatedCircleBorderColor,\n                  backgroundColor: interpolatedCircleColor,\n                  width: circleSize,\n                  height: circleSize,\n                  borderRadius: circleSize / 2\n                },\n                innerCircleStyle\n              ]}\n            >\n              {renderInsideCircle()}\n            </Animated.View>\n            {!value && renderInActiveText && (\n              <Text\n                style={[styles.text, styles.paddingLeft, inactiveTextStyle]}\n              >\n                {inActiveText}\n              </Text>\n            )}\n          </Animated.View>\n        </Animated.View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 71,\n    height: 30,\n    borderRadius: 30,\n    backgroundColor: \"black\"\n  },\n  animatedContainer: {\n    flex: 1,\n    width: 78,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  circle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: \"white\"\n  },\n  text: {\n    color: \"white\",\n    backgroundColor: \"transparent\"\n  },\n  paddingRight: {\n    paddingRight: 5\n  },\n  paddingLeft: {\n    paddingLeft: 5\n  }\n});\n"]},"metadata":{},"sourceType":"module"}