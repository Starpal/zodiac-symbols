{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport shallowequal from 'shallowequal';\nimport { getSafeBounceHeight, getDefaultHeaderHeight, getNavigationHeight, getStatusBarHeight } from \"./utils\";\nimport { createHeaderBackground as createDefaultHeaderBackground } from \"./createHeaderBackground\";\nimport { createCollapsibleCustomHeaderAnimator } from \"./createCollapsibleCustomHeaderAnimator\";\nvar CollapsibleHeaderType;\n\n(function (CollapsibleHeaderType) {\n  CollapsibleHeaderType[CollapsibleHeaderType[\"Default\"] = 0] = \"Default\";\n  CollapsibleHeaderType[CollapsibleHeaderType[\"SubHeader\"] = 1] = \"SubHeader\";\n})(CollapsibleHeaderType || (CollapsibleHeaderType = {}));\n\nvar useCollapsibleHeader = function useCollapsibleHeader(options, collapsibleHeaderType) {\n  if (collapsibleHeaderType === void 0) {\n    collapsibleHeaderType = CollapsibleHeaderType.Default;\n  }\n\n  var _a = options || {},\n      _b = _a.navigationOptions,\n      navigationOptions = _b === void 0 ? {} : _b,\n      _c = _a.config,\n      config = _c === void 0 ? {} : _c;\n\n  var _d = config.useNativeDriver,\n      useNativeDriver = _d === void 0 ? true : _d,\n      elevation = config.elevation,\n      collapsedColor = config.collapsedColor,\n      _e = config.disableOpacity,\n      disableOpacity = _e === void 0 ? false : _e,\n      _f = config.createHeaderBackground,\n      createHeaderBackground = _f === void 0 ? createDefaultHeaderBackground : _f;\n  var _g = navigationOptions.headerStyle,\n      userHeaderStyle = _g === void 0 ? {} : _g;\n\n  var _h = React.useState(userHeaderStyle),\n      headerStyle = _h[0],\n      setHeaderStyle = _h[1];\n\n  React.useEffect(function () {\n    if (!shallowequal(headerStyle, userHeaderStyle)) setHeaderStyle(userHeaderStyle);\n  }, [userHeaderStyle]);\n\n  var _j = React.useState(),\n      collapsible = _j[0],\n      setCollapsible = _j[1];\n\n  var _k = useWindowDimensions(),\n      width = _k.width,\n      height = _k.height;\n\n  var isLandscape = height < width;\n  var route = useRoute();\n  var navigation = useNavigation();\n  var positionY = React.useRef(new Animated.Value(0)).current;\n  var onScroll = Animated.event([{\n    nativeEvent: {\n      contentOffset: {\n        y: positionY\n      }\n    }\n  }], {\n    useNativeDriver: useNativeDriver\n  });\n\n  var onScrollWithListener = function onScrollWithListener(listener) {\n    return Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: positionY\n        }\n      }\n    }], {\n      useNativeDriver: useNativeDriver,\n      listener: listener\n    });\n  };\n\n  var offsetY = React.useRef(new Animated.Value(0)).current;\n  var offsetYValue = React.useRef(0);\n  React.useEffect(function () {\n    var listener = offsetY.addListener(function (_a) {\n      var value = _a.value;\n      offsetYValue.current = value;\n    });\n    return function () {\n      offsetY.removeListener(listener);\n    };\n  }, []);\n\n  var _l = route.params || {},\n      subHeaderHeight = _l.collapsibleSubHeaderHeight,\n      customHeaderHeight = _l.collapsibleCustomHeaderHeight;\n\n  React.useLayoutEffect(function () {\n    var headerHeight = 0;\n\n    if (customHeaderHeight) {\n      headerHeight = customHeaderHeight - getStatusBarHeight(isLandscape);\n    } else {\n      if (collapsibleHeaderType === CollapsibleHeaderType.SubHeader) {\n        headerHeight = subHeaderHeight || 0;\n      } else {\n        headerHeight = headerStyle.height != null ? headerStyle.height - getStatusBarHeight(isLandscape) : getDefaultHeaderHeight(isLandscape);\n      }\n    }\n\n    var safeBounceHeight = getSafeBounceHeight();\n    var animatedDiffClampY = Animated.diffClamp(Animated.add(positionY, offsetY), 0, safeBounceHeight + headerHeight);\n    var progress = animatedDiffClampY.interpolate({\n      inputRange: [safeBounceHeight, safeBounceHeight + headerHeight],\n      outputRange: [0, 1],\n      extrapolate: 'clamp'\n    });\n    var translateY = Animated.multiply(progress, -headerHeight);\n    var opacity = Animated.subtract(1, disableOpacity ? 0 : progress);\n\n    if (collapsibleHeaderType === CollapsibleHeaderType.Default) {\n      var options_1 = __assign(__assign({}, navigationOptions), {\n        headerStyle: __assign(__assign({}, headerStyle), {\n          transform: [{\n            translateY: translateY\n          }],\n          opacity: opacity\n        }),\n        headerBackground: createHeaderBackground({\n          translateY: translateY,\n          opacity: opacity,\n          backgroundColor: headerStyle === null || headerStyle === void 0 ? void 0 : headerStyle.backgroundColor,\n          collapsedColor: collapsedColor || (headerStyle === null || headerStyle === void 0 ? void 0 : headerStyle.backgroundColor),\n          elevation: elevation,\n          headerBackground: navigationOptions.headerBackground\n        }),\n        headerTransparent: true\n      });\n\n      if (navigationOptions.header) {\n        _extends(options_1, {\n          header: createCollapsibleCustomHeaderAnimator(navigationOptions.header)\n        });\n      }\n\n      navigation.setOptions(options_1);\n    }\n\n    var collapsible = {\n      onScroll: onScroll,\n      onScrollWithListener: onScrollWithListener,\n      containerPaddingTop: collapsibleHeaderType === CollapsibleHeaderType.SubHeader ? headerHeight : getNavigationHeight(isLandscape, headerHeight),\n      scrollIndicatorInsetTop: headerHeight,\n      positionY: positionY,\n      offsetY: offsetY,\n      translateY: translateY,\n      progress: progress,\n      opacity: opacity,\n      showHeader: function showHeader() {\n        offsetY.setValue(offsetYValue.current - headerHeight);\n      }\n    };\n    setCollapsible(collapsible);\n  }, [isLandscape, headerStyle, subHeaderHeight, customHeaderHeight]);\n  return collapsible || {\n    onScroll: null,\n    onScrollWithListener: function onScrollWithListener(e) {\n      return null;\n    },\n    containerPaddingTop: 0,\n    scrollIndicatorInsetTop: 0,\n    positionY: new Animated.Value(0),\n    offsetY: new Animated.Value(0),\n    translateY: new Animated.Value(0),\n    progress: new Animated.Value(0),\n    opacity: new Animated.Value(1),\n    showHeader: function showHeader() {}\n  };\n};\n\nvar useCollapsibleSubHeader = function useCollapsibleSubHeader(options) {\n  return useCollapsibleHeader(options, CollapsibleHeaderType.SubHeader);\n};\n\nexport { useCollapsibleHeader, useCollapsibleSubHeader };","map":{"version":3,"sources":["/Users/paola/Desktop/zodiac-symbols/node_modules/react-navigation-collapsible/lib/src/core.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useRoute","useNavigation","shallowequal","getSafeBounceHeight","getDefaultHeaderHeight","getNavigationHeight","getStatusBarHeight","createHeaderBackground","createDefaultHeaderBackground","createCollapsibleCustomHeaderAnimator","CollapsibleHeaderType","useCollapsibleHeader","options","collapsibleHeaderType","Default","_a","_b","navigationOptions","_c","config","_d","useNativeDriver","elevation","collapsedColor","_e","disableOpacity","_f","_g","headerStyle","userHeaderStyle","_h","useState","setHeaderStyle","useEffect","_j","collapsible","setCollapsible","_k","useWindowDimensions","width","height","isLandscape","route","navigation","positionY","useRef","Animated","Value","current","onScroll","event","nativeEvent","contentOffset","y","onScrollWithListener","listener","offsetY","offsetYValue","addListener","value","removeListener","_l","params","subHeaderHeight","collapsibleSubHeaderHeight","customHeaderHeight","collapsibleCustomHeaderHeight","useLayoutEffect","headerHeight","SubHeader","safeBounceHeight","animatedDiffClampY","diffClamp","add","progress","interpolate","inputRange","outputRange","extrapolate","translateY","multiply","opacity","subtract","options_1","transform","headerBackground","backgroundColor","headerTransparent","header","setOptions","containerPaddingTop","scrollIndicatorInsetTop","showHeader","setValue","e","useCollapsibleSubHeader"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Animated, useWindowDimensions, } from 'react-native';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport shallowequal from 'shallowequal';\nimport { getSafeBounceHeight, getDefaultHeaderHeight, getNavigationHeight, getStatusBarHeight, } from './utils';\nimport { createHeaderBackground as createDefaultHeaderBackground } from './createHeaderBackground';\nimport { createCollapsibleCustomHeaderAnimator } from './createCollapsibleCustomHeaderAnimator';\nvar CollapsibleHeaderType;\n(function (CollapsibleHeaderType) {\n    CollapsibleHeaderType[CollapsibleHeaderType[\"Default\"] = 0] = \"Default\";\n    CollapsibleHeaderType[CollapsibleHeaderType[\"SubHeader\"] = 1] = \"SubHeader\";\n})(CollapsibleHeaderType || (CollapsibleHeaderType = {}));\nvar useCollapsibleHeader = function (options, collapsibleHeaderType) {\n    if (collapsibleHeaderType === void 0) { collapsibleHeaderType = CollapsibleHeaderType.Default; }\n    var _a = options || {}, _b = _a.navigationOptions, navigationOptions = _b === void 0 ? {} : _b, _c = _a.config, config = _c === void 0 ? {} : _c;\n    var _d = config.useNativeDriver, useNativeDriver = _d === void 0 ? true : _d, elevation = config.elevation, collapsedColor = config.collapsedColor, _e = config.disableOpacity, disableOpacity = _e === void 0 ? false : _e, _f = config.createHeaderBackground, createHeaderBackground = _f === void 0 ? createDefaultHeaderBackground : _f;\n    var _g = navigationOptions.headerStyle, userHeaderStyle = _g === void 0 ? {} : _g;\n    var _h = React.useState(userHeaderStyle), headerStyle = _h[0], setHeaderStyle = _h[1];\n    React.useEffect(function () {\n        if (!shallowequal(headerStyle, userHeaderStyle))\n            setHeaderStyle(userHeaderStyle);\n    }, [userHeaderStyle]);\n    var _j = React.useState(), collapsible = _j[0], setCollapsible = _j[1];\n    var _k = useWindowDimensions(), width = _k.width, height = _k.height;\n    var isLandscape = height < width;\n    var route = useRoute();\n    var navigation = useNavigation();\n    var positionY = React.useRef(new Animated.Value(0)).current;\n    var onScroll = Animated.event([{ nativeEvent: { contentOffset: { y: positionY } } }], { useNativeDriver: useNativeDriver });\n    var onScrollWithListener = function (listener) {\n        return Animated.event([{ nativeEvent: { contentOffset: { y: positionY } } }], {\n            useNativeDriver: useNativeDriver,\n            listener: listener,\n        });\n    };\n    var offsetY = React.useRef(new Animated.Value(0)).current;\n    var offsetYValue = React.useRef(0);\n    React.useEffect(function () {\n        var listener = offsetY.addListener(function (_a) {\n            var value = _a.value;\n            offsetYValue.current = value;\n        });\n        return function () {\n            offsetY.removeListener(listener);\n        };\n    }, []);\n    var _l = route.params || {}, \n    // @ts-ignore\n    subHeaderHeight = _l.collapsibleSubHeaderHeight, \n    // @ts-ignore\n    customHeaderHeight = _l.collapsibleCustomHeaderHeight;\n    React.useLayoutEffect(function () {\n        var headerHeight = 0;\n        if (customHeaderHeight) {\n            headerHeight = customHeaderHeight - getStatusBarHeight(isLandscape);\n        }\n        else {\n            if (collapsibleHeaderType === CollapsibleHeaderType.SubHeader) {\n                headerHeight = subHeaderHeight || 0;\n            }\n            else {\n                headerHeight =\n                    headerStyle.height != null\n                        ? headerStyle.height - getStatusBarHeight(isLandscape)\n                        : getDefaultHeaderHeight(isLandscape);\n            }\n        }\n        var safeBounceHeight = getSafeBounceHeight();\n        var animatedDiffClampY = Animated.diffClamp(Animated.add(positionY, offsetY), 0, safeBounceHeight + headerHeight);\n        var progress = animatedDiffClampY.interpolate({\n            inputRange: [safeBounceHeight, safeBounceHeight + headerHeight],\n            outputRange: [0, 1],\n            extrapolate: 'clamp',\n        });\n        var translateY = Animated.multiply(progress, -headerHeight);\n        var opacity = Animated.subtract(1, disableOpacity ? 0 : progress);\n        if (collapsibleHeaderType === CollapsibleHeaderType.Default) {\n            var options_1 = __assign(__assign({}, navigationOptions), { headerStyle: __assign(__assign({}, headerStyle), { transform: [{ translateY: translateY }], opacity: opacity }), headerBackground: createHeaderBackground({\n                    translateY: translateY,\n                    opacity: opacity,\n                    backgroundColor: headerStyle === null || headerStyle === void 0 ? void 0 : headerStyle.backgroundColor,\n                    collapsedColor: collapsedColor || (headerStyle === null || headerStyle === void 0 ? void 0 : headerStyle.backgroundColor),\n                    elevation: elevation,\n                    headerBackground: navigationOptions.headerBackground,\n                }), headerTransparent: true });\n            if (navigationOptions.header) {\n                Object.assign(options_1, {\n                    header: createCollapsibleCustomHeaderAnimator(navigationOptions.header),\n                });\n            }\n            navigation.setOptions(options_1);\n        }\n        var collapsible = {\n            onScroll: onScroll,\n            onScrollWithListener: onScrollWithListener,\n            containerPaddingTop: collapsibleHeaderType === CollapsibleHeaderType.SubHeader\n                ? headerHeight\n                : getNavigationHeight(isLandscape, headerHeight),\n            scrollIndicatorInsetTop: headerHeight,\n            positionY: positionY,\n            offsetY: offsetY,\n            translateY: translateY,\n            progress: progress,\n            opacity: opacity,\n            showHeader: function () {\n                offsetY.setValue(offsetYValue.current - headerHeight);\n            },\n        };\n        setCollapsible(collapsible);\n    }, [isLandscape, headerStyle, subHeaderHeight, customHeaderHeight]);\n    return (collapsible || {\n        onScroll: null,\n        onScrollWithListener: function (e) { return null; },\n        containerPaddingTop: 0,\n        scrollIndicatorInsetTop: 0,\n        positionY: new Animated.Value(0),\n        offsetY: new Animated.Value(0),\n        translateY: new Animated.Value(0),\n        progress: new Animated.Value(0),\n        opacity: new Animated.Value(1),\n        showHeader: function () {\n            // do nothing\n        },\n    });\n};\nvar useCollapsibleSubHeader = function (options) {\n    return useCollapsibleHeader(options, CollapsibleHeaderType.SubHeader);\n};\nexport { useCollapsibleHeader, useCollapsibleSubHeader };\n"]},"metadata":{},"sourceType":"module"}