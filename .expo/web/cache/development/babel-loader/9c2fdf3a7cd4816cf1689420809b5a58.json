{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport 'react-native-gesture-handler';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./styles\";\nimport Loading from \"../../components/Loading\";\nimport DegreeDetails from \"../../components/DegreeDetails\";\nimport { getRandomDegree } from \"../../utils/API\";\nimport blackHole from \"../../static/images/blackHole.jpeg\";\nexport default function SearchScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      randomDegree = _useState4[0],\n      setRandomDegree = _useState4[1];\n\n  useEffect(function () {\n    getRandomDegree().then(function (random) {\n      setRandomDegree(random);\n      setIsLoaded(true);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, {}, isLoaded ? randomDegree.map(function (data, id) {\n    React.createElement(DegreeDetails, {\n      id: id,\n      sign: data.sign,\n      degree: data.degree,\n      title: data.title,\n      keynote: data.keynote,\n      description: data.description\n    });\n  }) : React.createElement(ImageBackground, {\n    source: blackHole,\n    style: styles.loadingPageImage\n  }, React.createElement(Loading, null)));\n}","map":{"version":3,"sources":["/Users/paola/Desktop/zodiac-symbols/views/Search/index.js"],"names":["React","useEffect","useState","styles","Loading","DegreeDetails","getRandomDegree","blackHole","SearchScreen","isLoaded","setIsLoaded","randomDegree","setRandomDegree","then","random","map","data","id","sign","degree","title","keynote","description","loadingPageImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,8BAAP;;AAEA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,SAASC,eAAT;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,YAAT,GAAwB;AAEtC,kBAAgCN,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwCR,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAqBC,eAArB;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACfK,IAAAA,eAAe,GACbO,IADF,CACO,UAACC,MAAD,EAAY;AACjBF,MAAAA,eAAe,CAACE,MAAD,CAAf;AACAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAJD;AAKA,GANQ,EAMN,EANM,CAAT;AAQA,SACC,0CACC,EADD,EAEED,QAAQ,GAAGE,YAAY,CAACI,GAAb,CAAiB,UAACC,IAAD,EAAOC,EAAP,EAAc;AAC1C,wBAAC,aAAD;AACC,MAAA,EAAE,EAAEA,EADL;AAEC,MAAA,IAAI,EAAED,IAAI,CAACE,IAFZ;AAGC,MAAA,MAAM,EAAEF,IAAI,CAACG,MAHd;AAIC,MAAA,KAAK,EAAEH,IAAI,CAACI,KAJb;AAKC,MAAA,OAAO,EAAEJ,IAAI,CAACK,OALf;AAMC,MAAA,WAAW,EAAEL,IAAI,CAACM;AANnB;AAOC,GARU,CAAH,GAUP,oBAAC,eAAD;AACC,IAAA,MAAM,EAAEf,SADT;AAEC,IAAA,KAAK,EAAEJ,MAAM,CAACoB;AAFf,KAGC,oBAAC,OAAD,OAHD,CAZH,CADD;AAuBA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'react-native-gesture-handler';\nimport { ImageBackground } from 'react-native';\nimport styles from './styles';\nimport Loading from '../../components/Loading';\nimport DegreeDetails from '../../components/DegreeDetails';\nimport { getRandomDegree } from '../../utils/API';\nimport blackHole from \"../../static/images/blackHole.jpeg\"\n\nexport default function SearchScreen() {\n\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [randomDegree, setRandomDegree] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetRandomDegree()\n\t\t\t.then((random) => {\n\t\t\t\tsetRandomDegree(random);\n\t\t\t\tsetIsLoaded(true);\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t{{}}\n\t\t\t{isLoaded ? randomDegree.map((data, id) => {\n\t\t\t\t<DegreeDetails \n\t\t\t\t\tid={id}\n\t\t\t\t\tsign={data.sign}\n\t\t\t\t\tdegree={data.degree}\n\t\t\t\t\ttitle={data.title}\n\t\t\t\t\tkeynote={data.keynote}\n\t\t\t\t\tdescription={data.description} />\n\t\t\t\t}\n\t\t\t\t) : (\n\t\t\t\t\t<ImageBackground \n\t\t\t\t\t\tsource={blackHole} \n\t\t\t\t\t\tstyle={styles.loadingPageImage}>\n\t\t\t\t\t\t<Loading />\n\t\t\t\t\t</ImageBackground>\n\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}